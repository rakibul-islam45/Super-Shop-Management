/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagement;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ssohan
 */
public class WorkerMangement extends javax.swing.JFrame {

    /**
     * Creates new form WorkerMangement
     */
    public WorkerMangement() {
        initComponents();
    }
    int x;

    public void run(int z) {
        x = z;
        load.doClick();

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        tt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        na = new javax.swing.JTextField();
        us = new javax.swing.JTextField();
        pa = new javax.swing.JTextField();
        mo = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        po = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        load = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Username", "Password", "Position", "Mobile"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        na.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                naActionPerformed(evt);
            }
        });

        us.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usActionPerformed(evt);
            }
        });

        jButton2.setText("Load Selected");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        jLabel5.setText("Postion");

        jLabel6.setText("Mobile");

        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Add");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel7.setText("1-4");

        load.setText("Load");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        jLabel8.setText("1 - Manager");

        jLabel9.setText("2 - Salesman");

        jLabel10.setText("3 - Storehouse");

        jLabel11.setText("4 - Owner");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(tt, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addComponent(load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGap(35, 35, 35)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(na)
                                        .addComponent(us)
                                        .addComponent(pa, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(po, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel7)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(na, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(us, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(po, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jButton6))
                    .addComponent(load))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void naActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_naActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_naActionPerformed

    private void usActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        if (x == 1) {
            new Manager().run();
        }
        if (x == 2) {
            new Owner().run();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String p = tt.getText();
        Connection conn = null;
        String url = "jdbc:sqlserver://localhost:1433;databaseName=MYDB;user = asd;password=123";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(url);
            System.out.println("connected");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    "Not connected",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }

        PreparedStatement ps = null;

        String SQL = "Select * FROM MYDB.dbo.worker where name like '%" + p + "%'";
        //String SQL = "SELECT * FROM worker";
        try {
            ps = conn.prepareStatement(SQL);
        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        try {
            rs = ps.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("Id");
        model.addColumn("Name");
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Position");
        model.addColumn("Mobile");

        try {
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                String user = rs.getString(3);
                String pass = rs.getString(4);
                int pos = rs.getInt(5);
                String mobile = rs.getString(6);
                if (x == 1 && (pos == 1 || pos == 4)) {
                    continue;
                }
                model.addRow(new Object[]{id, name, user, pass, pos, mobile});
            }
        } catch (SQLException ex) {
            Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        table.setModel(model);
        try {
            conn.close();
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int row = table.getSelectedRow();
        DefaultTableModel tm = (DefaultTableModel) table.getModel();
        String pp;
        if (row != -1) {
            na.setText(tm.getValueAt(row, 1).toString().trim());
            us.setText(tm.getValueAt(row, 2).toString().trim());
            pa.setText(tm.getValueAt(row, 3).toString().trim());
            po.setText(tm.getValueAt(row, 4).toString().trim());
            mo.setText(tm.getValueAt(row, 5).toString().trim());
        } else {
            JOptionPane.showMessageDialog(null,
                    "No Row is selected",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        }

        /*String p = ii.getText();
        Connection conn = null;
        String url = "jdbc:sqlserver://localhost:1433;databaseName=MYDB;user = asd;password=123";
        try {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        conn = DriverManager.getConnection(url);
        System.out.println("connected");
        } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null,
        "Not connected",
        "Error",
        JOptionPane.WARNING_MESSAGE);
        Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
        Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PreparedStatement ps = null;
        
        String SQL = "Select * FROM MYDB.dbo.worker where id = " + p;
        //String SQL = "SELECT * FROM worker";
        try {
        ps = conn.prepareStatement(SQL);
        } catch (SQLException ex) {
        Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        try {
        rs = ps.executeQuery();
        } catch (SQLException ex) {
        Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
        int k = 0;
        while (rs.next()) {
        int id = rs.getInt(1);
        String name = rs.getString(2);
        String user = rs.getString(3);
        String pass = rs.getString(4);
        int pos = rs.getInt(5);
        String mobile = rs.getString(6);
        if (x == 1 && (pos == 1 || pos == 4)) {
        continue;
        }
        k = 1;
        String cc;
        cc = Integer.toString(pos);
        na.setText(name.trim());
        us.setText(user.trim());
        pa.setText(pass.trim());
        po.setText(cc.trim());
        mo.setText(mobile.trim());
        
        }
        if (k == 0) {
        JOptionPane.showMessageDialog(null,
        "Id not found!!",
        "Error",
        JOptionPane.WARNING_MESSAGE);
        }
        } catch (SQLException ex) {
        Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
        conn.close();
        ps.close();
        } catch (SQLException ex) {
        Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
        }*/

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        String name = na.getText();
        String user = us.getText();
        String pass = pa.getText();
        String pos = po.getText();
        String mobile = mo.getText();
        int p = Integer.parseInt(pos);
        if ((x == 1 && (p == 2 || p == 3)) || (x == 2 && p > 0 && p < 5)) {
            Connection conn = null;
            String url = "jdbc:sqlserver://localhost:1433;databaseName=MYDB;user = asd;password=123";
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                conn = DriverManager.getConnection(url);
                System.out.println("connected");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                        "Not connected",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
            }

            Statement ps = null;

            String SQL = "insert into MYDB.dbo.worker (name,username,password,position,mobile) values"
                    + " ('" + name + "','" + user + "','" + pass + "','" + pos + "','" + mobile + "')";
            try {
                //String SQL = "SELECT * FROM worker";
                ps = conn.createStatement();
                ps.executeUpdate(SQL);
                JOptionPane.showMessageDialog(null,
                        "File Added",
                        "FIle",
                        JOptionPane.WARNING_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                conn.close();
                ps.close();
            } catch (SQLException ex) {
                Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "You don't have permission to select 1 or 4 postion",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        }
        load.doClick();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        String url = "jdbc:sqlserver://localhost:1433;databaseName=MYDB;user = asd;password=123";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(url);
            System.out.println("connected");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    "Not connected",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }

        PreparedStatement ps = null;

        String SQL = "Select * FROM MYDB.dbo.worker";
        //String SQL = "SELECT * FROM worker";
        try {
            ps = conn.prepareStatement(SQL);
        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        ResultSet rs = null;
        try {
            rs = ps.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("Id");
        model.addColumn("Name");
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Position");
        model.addColumn("Mobile");

        try {
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                String user = rs.getString(3);
                String pass = rs.getString(4);
                int pos = rs.getInt(5);
                String mobile = rs.getString(6);
                if (x == 1 && (pos == 1 || pos == 4)) {
                    continue;
                }
                model.addRow(new Object[]{id, name, user, pass, pos, mobile});
            }
        } catch (SQLException ex) {
            Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
        }
        na.setText("");
        us.setText("");
        pa.setText("");
        po.setText("");
        mo.setText("");
        table.setModel(model);
        try {
            conn.close();
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        int row = table.getSelectedRow();
        DefaultTableModel tm = (DefaultTableModel) table.getModel();
        String pp = null;
        if (row != -1) {
           pp = tm.getValueAt(row, 0).toString().trim();
        } else {
            JOptionPane.showMessageDialog(null,
                    "No Row is selected",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        }
        
        
        int p = Integer.parseInt(pp);
        if (p > 0) {
            Connection conn = null;
            String url = "jdbc:sqlserver://localhost:1433;databaseName=MYDB;user = asd;password=123";
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                conn = DriverManager.getConnection(url);
                System.out.println("connected");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                        "Not connected",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
            }

            Statement ps = null;

            String SQL = "DELETE FROM MYDB.dbo.worker where id = " + pp;
            try {
                //String SQL = "SELECT * FROM worker";
                ps = conn.createStatement();
                ps.executeUpdate(SQL);
                JOptionPane.showMessageDialog(null,
                        "File DELETED",
                        "FIle",
                        JOptionPane.WARNING_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                conn.close();
                ps.close();
            } catch (SQLException ex) {
                Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Enter valid ID",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        }
        load.doClick();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        DefaultTableModel tm = (DefaultTableModel) table.getModel();
        String pp = null;
        if (row != -1) {
           pp = tm.getValueAt(row, 0).toString().trim();
        } else {
            JOptionPane.showMessageDialog(null,
                    "No Row is selected",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        } 
        
        String name = na.getText();
        String user = us.getText();
        String pass = pa.getText();
        String pos = po.getText();
        String mobile = mo.getText();
        int p = Integer.parseInt(pos);
        int z = Integer.parseInt(pp);
        if ((x == 1 && (p == 2 || p == 3)) || (x == 2 && p > 0 && p < 5)) {
            Connection conn = null;
            String url = "jdbc:sqlserver://localhost:1433;databaseName=MYDB;user = asd;password=123";
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                conn = DriverManager.getConnection(url);
                System.out.println("connected");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                        "Not connected",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
            }

            Statement ps = null;

            String SQL = "UPDATE MYDB.dbo.worker set name = '" + name + "', username = '" + user + "', password = '" + pass
                    + "',position = " + pos + ",mobile = '" + mobile + "' where id = " + pp;
            try {
                //String SQL = "SELECT * FROM worker";
                ps = conn.createStatement();
                ps.executeUpdate(SQL);
                JOptionPane.showMessageDialog(null,
                        "File Edited",
                        "FIle",
                        JOptionPane.WARNING_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                conn.close();
                ps.close();
            } catch (SQLException ex) {
                Logger.getLogger(WorkerMangement.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "You don't have permission to select 1 or 4 postion",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
        }
        load.doClick();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton load;
    private javax.swing.JTextField mo;
    private javax.swing.JTextField na;
    private javax.swing.JTextField pa;
    private javax.swing.JTextField po;
    private javax.swing.JTable table;
    private javax.swing.JTextField tt;
    private javax.swing.JTextField us;
    // End of variables declaration//GEN-END:variables
}
